---
import ThemeToggle from './ThemeToggle.astro';

const base = import.meta.env.BASE_URL;
const navItems = [
  { href: `${base}about/`, label: 'About' },
  { href: `${base}contact/`, label: 'Contact' }
];

const currentPath = Astro.url.pathname;

// Helper function to check if current path matches nav item
const isActive = (href: string) => {
  const cleanPath = currentPath.endsWith('/') && currentPath !== base 
    ? currentPath.slice(0, -1) 
    : currentPath;
  const cleanHref = href.endsWith('/') && href !== base 
    ? href.slice(0, -1) 
    : href;
  return cleanPath === cleanHref;
};
---

<header class="fixed top-0 left-0 right-0 z-50 bg-white/80 dark:bg-gray-900/80 backdrop-blur-sm border-b border-gray-200 dark:border-gray-800">
  <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex items-center justify-between h-16">
      <!-- Logo/Name -->
      <a href={base} class="text-xl font-semibold hover:text-gray-600 dark:hover:text-gray-300 transition-colors">
        Andrew Gauntlet
      </a>
      
      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-8">
        {navItems.map(item => (
          <a 
            href={item.href} 
            class={`text-sm font-medium transition-colors hover:text-gray-600 dark:hover:text-gray-300 ${
              isActive(item.href) ? 'text-gray-900 dark:text-gray-100' : 'text-gray-500 dark:text-gray-400'
            }`}
          >
            {item.label}
          </a>
        ))}
        <ThemeToggle />
      </div>
      
      <!-- Mobile Menu Button -->
      <div class="flex md:hidden items-center space-x-4">
        <ThemeToggle />
        <button
          id="mobile-menu-button"
          type="button"
          class="p-2 rounded-md text-gray-500 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-100"
          aria-label="Toggle menu"
        >
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>
  </nav>
  
  <!-- Mobile Menu -->
  <div id="mobile-menu" class="hidden md:hidden bg-white dark:bg-gray-900 border-t border-gray-200 dark:border-gray-800">
    <div class="px-4 py-2 space-y-1">
      {navItems.map(item => (
        <a 
          href={item.href} 
          class={`block px-3 py-2 rounded-md text-base font-medium transition-colors hover:bg-gray-100 dark:hover:bg-gray-800 ${
            isActive(item.href)
              ? 'text-gray-900 dark:text-gray-100 bg-gray-50 dark:bg-gray-800' 
              : 'text-gray-500 dark:text-gray-400'
          }`}
        >
          {item.label}
        </a>
      ))}
    </div>
  </div>
</header>

<script>
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  
  mobileMenuButton?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });
  
  // Close mobile menu when clicking outside
  document.addEventListener('click', (e) => {
    const target = e.target as HTMLElement;
    if (!mobileMenuButton?.contains(target) && !mobileMenu?.contains(target)) {
      mobileMenu?.classList.add('hidden');
    }
  });
</script>